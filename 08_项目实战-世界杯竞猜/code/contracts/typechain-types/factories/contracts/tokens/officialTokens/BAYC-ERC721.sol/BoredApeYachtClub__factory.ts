/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BoredApeYachtClub,
  BoredApeYachtClubInterface,
} from "../../../../../contracts/tokens/officialTokens/BAYC-ERC721.sol/BoredApeYachtClub";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxNftSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleStart",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "BAYC_PROVENANCE",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_APES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVEAL_TIMESTAMP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencySetStartingIndexBlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flipSaleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxApePurchase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numberOfTokens",
        type: "uint256",
      },
    ],
    name: "mintApe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserveApes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleIsActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "provenanceHash",
        type: "string",
      },
    ],
    name: "setProvenanceHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "revealTimeStamp",
        type: "uint256",
      },
    ],
    name: "setRevealTimestamp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setStartingIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startingIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startingIndexBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040819052600060808190526200001b91600b91620001b7565b50600f805460ff191690553480156200003357600080fd5b5060405162002b6838038062002b6883398101604081905262000056916200032a565b83836200006a6301ffc9a760e01b62000133565b81516200007f906006906020850190620001b7565b50805162000095906007906020840190620001b7565b50620000a86380ac58cd60e01b62000133565b620000ba635b5e139f60e01b62000133565b620000cc63780e9d6360e01b62000133565b5050600a80546001600160a01b0319163390811790915560405181906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600e8290556200012581620bdd80620003a4565b601055506200040892505050565b6001600160e01b03198082161415620001925760405162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015260640160405180910390fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054620001c590620003cb565b90600052602060002090601f016020900481019282620001e9576000855562000234565b82601f106200020457805160ff191683800117855562000234565b8280016001018555821562000234579182015b828111156200023457825182559160200191906001019062000217565b506200024292915062000246565b5090565b5b8082111562000242576000815560010162000247565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200028557600080fd5b81516001600160401b0380821115620002a257620002a26200025d565b604051601f8301601f19908116603f01168101908282118183101715620002cd57620002cd6200025d565b81604052838152602092508683858801011115620002ea57600080fd5b600091505b838210156200030e5785820183015181830184015290820190620002ef565b83821115620003205760008385830101525b9695505050505050565b600080600080608085870312156200034157600080fd5b84516001600160401b03808211156200035957600080fd5b620003678883890162000273565b955060208701519150808211156200037e57600080fd5b506200038d8782880162000273565b604087015160609097015195989097509350505050565b60008219821115620003c657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680620003e057607f821691505b602082108114156200040257634e487b7160e01b600052602260045260246000fd5b50919050565b61275080620004186000396000f3fe60806040526004361061021a5760003560e01c80636c0360eb11610123578063b0f67427116100ab578063e36d64981161006f578063e36d6498146105d3578063e985e9c5146105e9578063e986655014610632578063eb8d244414610647578063f2fde38b1461066157600080fd5b8063b0f6742714610552578063b88d4fde14610567578063bb8a16bd14610587578063c87b56dd1461059d578063cb774d47146105bd57600080fd5b80637d17fcbe116100f25780637d17fcbe146104d75780638da5cb5b146104ec57806395d89b411461050a578063a22cb4651461051f578063a723533e1461053f57600080fd5b80636c0360eb1461047757806370a082311461048c578063715018a6146104ac5780637a3f451e146104c157600080fd5b80632f745c59116101a65780634f6ccce7116101755780634f6ccce7146103ed57806355f804b31461040d578063571dff3b1461042d578063607e20e3146104425780636352211e1461045757600080fd5b80632f745c591461038357806334918dfd146103a35780633ccfd60b146103b857806342842e0e146103cd57600080fd5b8063095ea7b3116101ed578063095ea7b3146102ea578063109695231461030a57806318160ddd1461032a57806318e20a381461034d57806323b872dd1461036357600080fd5b8063018a2c371461021f57806301ffc9a71461024157806306fdde0314610290578063081812fc146102b2575b600080fd5b34801561022b57600080fd5b5061023f61023a3660046120f3565b610681565b005b34801561024d57600080fd5b5061027b61025c366004612122565b6001600160e01b03191660009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b34801561029c57600080fd5b506102a56106b9565b6040516102879190612197565b3480156102be57600080fd5b506102d26102cd3660046120f3565b61074b565b6040516001600160a01b039091168152602001610287565b3480156102f657600080fd5b5061023f6103053660046121c6565b6107d3565b34801561031657600080fd5b5061023f61032536600461227c565b6108e9565b34801561033657600080fd5b5061033f61092a565b604051908152602001610287565b34801561035957600080fd5b5061033f60105481565b34801561036f57600080fd5b5061023f61037e3660046122c5565b61093b565b34801561038f57600080fd5b5061033f61039e3660046121c6565b61096c565b3480156103af57600080fd5b5061023f610997565b3480156103c457600080fd5b5061023f6109d5565b3480156103d957600080fd5b5061023f6103e83660046122c5565b610a2e565b3480156103f957600080fd5b5061033f6104083660046120f3565b610a49565b34801561041957600080fd5b5061023f61042836600461227c565b610a5f565b34801561043957600080fd5b5061033f601481565b34801561044e57600080fd5b506102a5610a95565b34801561046357600080fd5b506102d26104723660046120f3565b610b23565b34801561048357600080fd5b506102a5610b4b565b34801561049857600080fd5b5061033f6104a7366004612301565b610b5a565b3480156104b857600080fd5b5061023f610be6565b3480156104cd57600080fd5b5061033f6103e881565b3480156104e357600080fd5b5061023f610c5a565b3480156104f857600080fd5b50600a546001600160a01b03166102d2565b34801561051657600080fd5b506102a5610cda565b34801561052b57600080fd5b5061023f61053a36600461231c565b610ce9565b61023f61054d3660046120f3565b610dae565b34801561055e57600080fd5b5061023f610fa0565b34801561057357600080fd5b5061023f610582366004612358565b611007565b34801561059357600080fd5b5061033f600e5481565b3480156105a957600080fd5b506102a56105b83660046120f3565b61103f565b3480156105c957600080fd5b5061033f600d5481565b3480156105df57600080fd5b5061033f600c5481565b3480156105f557600080fd5b5061027b6106043660046123d4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561063e57600080fd5b5061023f6111b1565b34801561065357600080fd5b50600f5461027b9060ff1681565b34801561066d57600080fd5b5061023f61067c366004612301565b6112b3565b600a546001600160a01b031633146106b45760405162461bcd60e51b81526004016106ab90612407565b60405180910390fd5b601055565b6060600680546106c89061243c565b80601f01602080910402602001604051908101604052809291908181526020018280546106f49061243c565b80156107415780601f1061071657610100808354040283529160200191610741565b820191906000526020600020905b81548152906001019060200180831161072457829003601f168201915b5050505050905090565b60006107568261139e565b6107b75760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106ab565b506000908152600460205260409020546001600160a01b031690565b60006107de82610b23565b9050806001600160a01b0316836001600160a01b0316141561084c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106ab565b336001600160a01b038216148061086857506108688133610604565b6108da5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106ab565b6108e483836113ab565b505050565b600a546001600160a01b031633146109135760405162461bcd60e51b81526004016106ab90612407565b805161092690600b90602084019061205a565b5050565b60006109366002611419565b905090565b6109453382611423565b6109615760405162461bcd60e51b81526004016106ab90612477565b6108e483838361150d565b6001600160a01b038216600090815260016020526040812061098e908361168e565b90505b92915050565b600a546001600160a01b031633146109c15760405162461bcd60e51b81526004016106ab90612407565b600f805460ff19811660ff90911615179055565b600a546001600160a01b031633146109ff5760405162461bcd60e51b81526004016106ab90612407565b6040514790339082156108fc029083906000818181858888f19350505050158015610926573d6000803e3d6000fd5b6108e483838360405180602001604052806000815250611007565b600080610a5760028461169a565b509392505050565b600a546001600160a01b03163314610a895760405162461bcd60e51b81526004016106ab90612407565b610a92816116b6565b50565b600b8054610aa29061243c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ace9061243c565b8015610b1b5780601f10610af057610100808354040283529160200191610b1b565b820191906000526020600020905b815481529060010190602001808311610afe57829003601f168201915b505050505081565b6000610991826040518060600160405280602981526020016126f260299139600291906116c9565b6060600980546106c89061243c565b60006001600160a01b038216610bc55760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016106ab565b6001600160a01b038216600090815260016020526040902061099190611419565b600a546001600160a01b03163314610c105760405162461bcd60e51b81526004016106ab90612407565b600a546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600a80546001600160a01b0319169055565b600a546001600160a01b03163314610c845760405162461bcd60e51b81526004016106ab90612407565b600d5415610cd45760405162461bcd60e51b815260206004820152601d60248201527f5374617274696e6720696e64657820697320616c72656164792073657400000060448201526064016106ab565b43600c55565b6060600780546106c89061243c565b6001600160a01b038216331415610d425760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106ab565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600f5460ff16610e005760405162461bcd60e51b815260206004820152601f60248201527f53616c65206d7573742062652061637469766520746f206d696e74204170650060448201526064016106ab565b6014811115610e5b5760405162461bcd60e51b815260206004820152602160248201527f43616e206f6e6c79206d696e7420323020746f6b656e7320617420612074696d6044820152606560f81b60648201526084016106ab565b600e54610e7082610e6a61092a565b906116e0565b1115610ecf5760405162461bcd60e51b815260206004820152602860248201527f507572636861736520776f756c6420657863656564206d617820737570706c79604482015267206f66204170657360c01b60648201526084016106ab565b34610edc6103e88361173f565b1115610f2a5760405162461bcd60e51b815260206004820152601f60248201527f45746865722076616c75652073656e74206973206e6f7420636f72726563740060448201526064016106ab565b60005b81811015610f6f576000610f3f61092a565b9050600e54610f4c61092a565b1015610f5c57610f5c33826117be565b5080610f67816124de565b915050610f2d565b50600c54158015610f945750600e54610f8661092a565b1480610f9457506010544210155b15610a925743600c5550565b600a546001600160a01b03163314610fca5760405162461bcd60e51b81526004016106ab90612407565b6000610fd461092a565b905060005b601e81101561092657610ff533610ff083856124f9565b6117be565b80610fff816124de565b915050610fd9565b6110113383611423565b61102d5760405162461bcd60e51b81526004016106ab90612477565b611039848484846117d8565b50505050565b606061104a8261139e565b6110ae5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016106ab565b600082815260086020526040812080546110c79061243c565b80601f01602080910402602001604051908101604052809291908181526020018280546110f39061243c565b80156111405780601f1061111557610100808354040283529160200191611140565b820191906000526020600020905b81548152906001019060200180831161112357829003601f168201915b505050505090506000611151610b4b565b9050805160001415611164575092915050565b81511561119657808260405160200161117e929190612511565b60405160208183030381529060405292505050919050565b806111a08561180b565b60405160200161117e929190612511565b600d54156112015760405162461bcd60e51b815260206004820152601d60248201527f5374617274696e6720696e64657820697320616c72656164792073657400000060448201526064016106ab565b600c546112505760405162461bcd60e51b815260206004820181905260248201527f5374617274696e6720696e64657820626c6f636b206d7573742062652073657460448201526064016106ab565b600e54600c54611261919040612556565b600d55600c5460ff90611275904390611922565b111561129857600e5461128960014361256a565b611294919040612556565b600d555b600d546112b157600d546112ad9060016116e0565b600d555b565b600a546001600160a01b031633146112dd5760405162461bcd60e51b81526004016106ab90612407565b6001600160a01b0381166113425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106ab565b600a546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600a80546001600160a01b0319166001600160a01b0392909216919091179055565b600061099160028361197e565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113e082610b23565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610991825490565b600061142e8261139e565b61148f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106ab565b600061149a83610b23565b9050806001600160a01b0316846001600160a01b031614806114d55750836001600160a01b03166114ca8461074b565b6001600160a01b0316145b8061150557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661152082610b23565b6001600160a01b0316146115885760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016106ab565b6001600160a01b0382166115ea5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106ab565b6115f56000826113ab565b6001600160a01b03831660009081526001602052604090206116179082611996565b506001600160a01b038216600090815260016020526040902061163a90826119a2565b50611647600282846119ae565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061098e83836119c4565b60008080806116a98686611a4a565b9097909650945050505050565b805161092690600990602084019061205a565b60006116d6848484611ae7565b90505b9392505050565b6000806116ed83856124f9565b90508381101561098e5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106ab565b60008261174e57506000610991565b600061175a8385612581565b90508261176785836125a0565b1461098e5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106ab565b610926828260405180602001604052806000815250611b50565b6117e384848461150d565b6117ef84848484611b83565b6110395760405162461bcd60e51b81526004016106ab906125b4565b60608161182f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156118595780611843816124de565b91506118529050600a836125a0565b9150611833565b60008167ffffffffffffffff811115611874576118746121f0565b6040519080825280601f01601f19166020018201604052801561189e576020820181803683370190505b50905060006118ae60018461256a565b90508593505b8315611919576118c5600a85612556565b6118d09060306124f9565b60f81b82826118de81612606565b9350815181106118f0576118f061261d565b60200101906001600160f81b031916908160001a905350611912600a856125a0565b93506118b4565b50949350505050565b6000828211156119745760405162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f77000060448201526064016106ab565b61098e828461256a565b6000818152600183016020526040812054151561098e565b600061098e8383611c54565b600061098e8383611d47565b60006116d684846001600160a01b038516611d96565b81546000908210611a225760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e604482015261647360f01b60648201526084016106ab565b826000018281548110611a3757611a3761261d565b9060005260206000200154905092915050565b815460009081908310611aaa5760405162461bcd60e51b815260206004820152602260248201527f456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e604482015261647360f01b60648201526084016106ab565b6000846000018481548110611ac157611ac161261d565b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611b175760405162461bcd60e51b81526004016106ab9190612197565b5084611b2460018361256a565b81548110611b3457611b3461261d565b9060005260206000209060020201600101549150509392505050565b611b5a8383611e37565b611b676000848484611b83565b6108e45760405162461bcd60e51b81526004016106ab906125b4565b60006001600160a01b0384163b611b9c57506001611505565b6000611c1d630a85bd0160e11b33888787604051602401611bc09493929190612633565b604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b0383818316178352505050506040518060600160405280603281526020016126c0603291396001600160a01b0388169190611f4f565b9050600081806020019051810190611c359190612670565b6001600160e01b031916630a85bd0160e11b1492505050949350505050565b60008181526001830160205260408120548015611d3d576000611c7860018361256a565b8554909150600090611c8c9060019061256a565b90506000866000018281548110611ca557611ca561261d565b9060005260206000200154905080876000018481548110611cc857611cc861261d565b600091825260209091200155611cdf8360016124f9565b60008281526001890160205260409020558654879080611d0157611d0161268d565b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610991565b6000915050610991565b6000818152600183016020526040812054611d8e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610991565b506000610991565b600082815260018401602052604081205480611dfb5750506040805180820182528381526020808201848152865460018181018955600089815284812095516002909302909501918255915190820155865486845281880190925292909120556116d9565b8285611e0860018461256a565b81548110611e1857611e1861261d565b90600052602060002090600202016001018190555060009150506116d9565b6001600160a01b038216611e8d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106ab565b611e968161139e565b15611ee35760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106ab565b6001600160a01b0382166000908152600160205260409020611f0590826119a2565b50611f12600282846119ae565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60606116d6848460008585843b611fa85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016106ab565b600080866001600160a01b03168587604051611fc491906126a3565b60006040518083038185875af1925050503d8060008114612001576040519150601f19603f3d011682016040523d82523d6000602084013e612006565b606091505b5091509150612016828286612021565b979650505050505050565b606083156120305750816116d9565b8251156120405782518084602001fd5b8160405162461bcd60e51b81526004016106ab9190612197565b8280546120669061243c565b90600052602060002090601f01602090048101928261208857600085556120ce565b82601f106120a157805160ff19168380011785556120ce565b828001600101855582156120ce579182015b828111156120ce5782518255916020019190600101906120b3565b506120da9291506120de565b5090565b5b808211156120da57600081556001016120df565b60006020828403121561210557600080fd5b5035919050565b6001600160e01b031981168114610a9257600080fd5b60006020828403121561213457600080fd5b813561098e8161210c565b60005b8381101561215a578181015183820152602001612142565b838111156110395750506000910152565b6000815180845261218381602086016020860161213f565b601f01601f19169290920160200192915050565b60208152600061098e602083018461216b565b80356001600160a01b03811681146121c157600080fd5b919050565b600080604083850312156121d957600080fd5b6121e2836121aa565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115612221576122216121f0565b604051601f8501601f19908116603f01168101908282118183101715612249576122496121f0565b8160405280935085815286868601111561226257600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561228e57600080fd5b813567ffffffffffffffff8111156122a557600080fd5b8201601f810184136122b657600080fd5b61150584823560208401612206565b6000806000606084860312156122da57600080fd5b6122e3846121aa565b92506122f1602085016121aa565b9150604084013590509250925092565b60006020828403121561231357600080fd5b61098e826121aa565b6000806040838503121561232f57600080fd5b612338836121aa565b91506020830135801515811461234d57600080fd5b809150509250929050565b6000806000806080858703121561236e57600080fd5b612377856121aa565b9350612385602086016121aa565b925060408501359150606085013567ffffffffffffffff8111156123a857600080fd5b8501601f810187136123b957600080fd5b6123c887823560208401612206565b91505092959194509250565b600080604083850312156123e757600080fd5b6123f0836121aa565b91506123fe602084016121aa565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061245057607f821691505b6020821081141561247157634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006000198214156124f2576124f26124c8565b5060010190565b6000821982111561250c5761250c6124c8565b500190565b6000835161252381846020880161213f565b83519083019061253781836020880161213f565b01949350505050565b634e487b7160e01b600052601260045260246000fd5b60008261256557612565612540565b500690565b60008282101561257c5761257c6124c8565b500390565b600081600019048311821515161561259b5761259b6124c8565b500290565b6000826125af576125af612540565b500490565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600081612615576126156124c8565b506000190190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906126669083018461216b565b9695505050505050565b60006020828403121561268257600080fd5b815161098e8161210c565b634e487b7160e01b600052603160045260246000fd5b600082516126b581846020870161213f565b919091019291505056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656ea2646970667358221220345d833d4d31b5354aaf97c41ce29b2821e1432885ca86ee3534c84d99f16df064736f6c63430008090033";

type BoredApeYachtClubConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoredApeYachtClubConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoredApeYachtClub__factory extends ContractFactory {
  constructor(...args: BoredApeYachtClubConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    maxNftSupply: PromiseOrValue<BigNumberish>,
    saleStart: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoredApeYachtClub> {
    return super.deploy(
      name,
      symbol,
      maxNftSupply,
      saleStart,
      overrides || {}
    ) as Promise<BoredApeYachtClub>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    maxNftSupply: PromiseOrValue<BigNumberish>,
    saleStart: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      maxNftSupply,
      saleStart,
      overrides || {}
    );
  }
  override attach(address: string): BoredApeYachtClub {
    return super.attach(address) as BoredApeYachtClub;
  }
  override connect(signer: Signer): BoredApeYachtClub__factory {
    return super.connect(signer) as BoredApeYachtClub__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoredApeYachtClubInterface {
    return new utils.Interface(_abi) as BoredApeYachtClubInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoredApeYachtClub {
    return new Contract(address, _abi, signerOrProvider) as BoredApeYachtClub;
  }
}
