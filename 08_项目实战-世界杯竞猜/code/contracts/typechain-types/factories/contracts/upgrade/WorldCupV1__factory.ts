/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WorldCupV1,
  WorldCupV1Interface,
} from "../../../contracts/upgrade/WorldCupV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_country",
        type: "uint256",
      },
    ],
    name: "Finialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum WorldCupV1.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "Play",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum WorldCupV1.Country",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "countryToPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currRound",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCupV1.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "finialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "enum WorldCupV1.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getCountryPlayters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "enum WorldCupV1.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_counts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedAmts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCupV1.Country",
        name: "_selected",
        type: "uint8",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "winnerVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506111d4806100206000396000f3fe6080604052600436106100c25760003560e01c806353a04b051161007f578063c4864f5711610059578063c4864f5714610208578063ed12e8ef14610228578063f851a4401461023b578063fe4b84df1461026157600080fd5b806353a04b05146101c0578063ada2ac38146101d3578063b88a802f146101f357600080fd5b80630fa68115146100c757806328655c5b1461010457806329dcb0cf14610128578063343305861461013e57806334bf6d011461016b5780633f5d80561461018d575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610e28565b610281565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011057600080fd5b5061011a60055481565b6040519081526020016100fb565b34801561013457600080fd5b5061011a60045481565b34801561014a57600080fd5b5061011a610159366004610e7b565b60036020526000908152604090205481565b34801561017757600080fd5b5061018b610186366004610e9d565b6102c6565b005b34801561019957600080fd5b506000546101ae90600160b01b900460ff1681565b60405160ff90911681526020016100fb565b61018b6101ce366004610e9d565b61076b565b3480156101df57600080fd5b5061011a6101ee366004610eb8565b61092b565b3480156101ff57600080fd5b5061018b61098e565b34801561021457600080fd5b5061011a610223366004610efb565b610af7565b34801561023457600080fd5b504761011a565b34801561024757600080fd5b506000546100e7906201000090046001600160a01b031681565b34801561026d57600080fd5b5061018b61027c366004610f2e565b610b45565b600260205282600052604060002060205281600052604060002081815481106102a957600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6000546201000090046001600160a01b0316331461031d5760405162461bcd60e51b815260206004820152600f60248201526e6e6f7420617574686f72697a65642160881b60448201526064015b60405180910390fd5b60008054600160b01b900460ff1681526002602052604081208183600481111561034957610349610f47565b600481111561035a5761035a610f47565b81526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156103bc57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161039e575b505050505090506000806005546103d04790565b6103da9190610f73565b90506104376040518060400160405280601081526020016f31bab93920bb30b62130b630b731b29d60811b815250826040518060400160405280600e81526020016d3bb4b73732b9399031b7bab73a1d60911b8152508651610cc3565b60005b835181101561069857600084828151811061045757610457610f8a565b6020908102919091018101516000805460ff600160b01b909104811682526001845260408083206001600160a01b038516845290945292902080549193509116156104c4576104bd60405180606001604052806032815260200161116d60329139610d12565b5050610686565b805460ff1916600190811782556000908201818960048111156104e9576104e9610f47565b60048111156104fa576104fa610f47565b815260208082019290925260409081016000908120548154600160b01b900460ff1682526002909352908120919250908290828b600481111561053f5761053f610f47565b600481111561055057610550610f47565b815260208101919091526040016000205461056b9088610fa0565b6105759190610fc2565b6001600160a01b0385166000908152600360205260408120805492935083929091906105a2908490610fe1565b909155506105b290508188610fe1565b965080600560008282546105c69190610fe1565b9250508190555061061b604051806040016040528060078152602001663bb4b73732b91d60c91b815250856040518060400160405280600b81526020016a31bab93921b7bab73a399d60a91b81525085610d58565b604080518082018252601081526f3932bbb0b9321030b6ba1031bab9391d60811b6020808301919091528251808401845260068152653a37ba30b61d60d11b818301526001600160a01b0388166000908152600390925292902054610681928491610cc3565b505050505b8061069081610ff9565b91505061043a565b5060006106a58383610f73565b905080156106e157600080546201000090046001600160a01b0316815260036020526040812080548392906106db908490610fe1565b90915550505b600080547ff29c2f4a0ac8b177f1c72bbdf7cd3899630a10ce3626cc73671d98f682d574c091600160b01b90910460ff1690601661071e83611014565b91906101000a81548160ff021916908360ff16021790555086600481111561074857610748610f47565b6040805160ff909316835260208301919091520160405180910390a15050505050565b34633b9aca00146107be5760405162461bcd60e51b815260206004820152601760248201527f696e76616c69642066756e64732070726f7669646564210000000000000000006044820152606401610314565b60045442106108005760405162461bcd60e51b815260206004820152600e60248201526d6974277320616c6c206f7665722160901b6044820152606401610314565b60008054600160b01b900460ff1681526002602052604081209082600481111561082c5761082c610f47565b600481111561083d5761083d610f47565b8152602080820192909252604090810160009081208054600181810183559183528483200180546001600160a01b03191633908117909155825460ff600160b01b9091041683528185528383209083529093529081209190828201908460048111156108ab576108ab610f47565b60048111156108bc576108bc610f47565b815260200190815260200160002060008282546108d99190610fe1565b90915550506000546040517fed75611777bda76f73e63b79a0b4b2f59dfb76a034ff90e9a4f204f414dadef79161091f91600160b01b90910460ff169033908690611034565b60405180910390a15050565b60ff831660009081526001602081815260408084206001600160a01b03871685529091528220018183600481111561096557610965610f47565b600481111561097657610976610f47565b81526020019081526020016000205490509392505050565b33600090815260036020526040902054806109df5760405162461bcd60e51b81526020600482015260116024820152706e6f7468696e6720746f20636c61696d2160781b6044820152606401610314565b33600090815260036020526040812081905560058054839290610a03908490610f73565b9091555050604051600090339083908381818185875af1925050503d8060008114610a4a576040519150601f19603f3d011682016040523d82523d6000602084013e610a4f565b606091505b5050905080610a975760405162461bcd60e51b8152602060048201526014602482015273636c61696d20726577617264206661696c65642160601b6044820152606401610314565b610ac1604051806040016040528060088152602001673932bbb0b932399d60c11b81525083610da1565b60408051338152602081018490527fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e910161091f565b60ff8216600090815260026020526040812081836004811115610b1c57610b1c610f47565b6004811115610b2d57610b2d610f47565b81526020810191909152604001600020549392505050565b600054610100900460ff1615808015610b655750600054600160ff909116105b80610b7f5750303b158015610b7f575060005460ff166001145b610be25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610314565b6000805460ff191660011790558015610c05576000805461ff0019166101001790555b6000805462010000600160b01b031916336201000002179055428211610c785760405162461bcd60e51b815260206004820152602260248201527f576f726c644375704c6f74746572793a20696e76616c696420646561646c696e604482015261652160f01b6064820152608401610314565b60048290558015610cbf576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161091f565b5050565b610d0c84848484604051602401610cdd94939291906110c6565b60408051601f198184030181529190526020810180516001600160e01b031663c67ea9d160e01b179052610de2565b50505050565b610d5581604051602401610d269190611103565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610de2565b50565b610d0c84848484604051602401610d729493929190611116565b60408051601f198184030181529190526020810180516001600160e01b03166348e8889760e11b179052610de2565b610cbf8282604051602401610db792919061114a565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803560ff81168114610e1457600080fd5b919050565b803560058110610e1457600080fd5b600080600060608486031215610e3d57600080fd5b610e4684610e03565b9250610e5460208501610e19565b9150604084013590509250925092565b80356001600160a01b0381168114610e1457600080fd5b600060208284031215610e8d57600080fd5b610e9682610e64565b9392505050565b600060208284031215610eaf57600080fd5b610e9682610e19565b600080600060608486031215610ecd57600080fd5b610ed684610e03565b9250610ee460208501610e64565b9150610ef260408501610e19565b90509250925092565b60008060408385031215610f0e57600080fd5b610f1783610e03565b9150610f2560208401610e19565b90509250929050565b600060208284031215610f4057600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610f8557610f85610f5d565b500390565b634e487b7160e01b600052603260045260246000fd5b600082610fbd57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610fdc57610fdc610f5d565b500290565b60008219821115610ff457610ff4610f5d565b500190565b600060001982141561100d5761100d610f5d565b5060010190565b600060ff821660ff81141561102b5761102b610f5d565b60010192915050565b60ff841681526001600160a01b0383166020820152606081016005831061106b57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b6000815180845260005b8181101561109f57602081850181015186830182015201611083565b818111156110b1576000602083870101525b50601f01601f19169290920160200192915050565b6080815260006110d96080830187611079565b85602084015282810360408401526110f18186611079565b91505082606083015295945050505050565b602081526000610e966020830184611079565b6080815260006111296080830187611079565b6001600160a01b038616602084015282810360408401526110f18186611079565b60408152600061115d6040830185611079565b9050826020830152939250505056fe746869732077696e6e657220686173206265656e2073657420616c72656164792c2077696c6c20626520736b697070656421a26469706673582212200bca0aee53cde8d8dcc79eb9a10744cf377d75f81980ed1af266b27ccc8721f764736f6c63430008090033";

type WorldCupV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldCupV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldCupV1__factory extends ContractFactory {
  constructor(...args: WorldCupV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WorldCupV1> {
    return super.deploy(overrides || {}) as Promise<WorldCupV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WorldCupV1 {
    return super.attach(address) as WorldCupV1;
  }
  override connect(signer: Signer): WorldCupV1__factory {
    return super.connect(signer) as WorldCupV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldCupV1Interface {
    return new utils.Interface(_abi) as WorldCupV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldCupV1 {
    return new Contract(address, _abi, signerOrProvider) as WorldCupV1;
  }
}
