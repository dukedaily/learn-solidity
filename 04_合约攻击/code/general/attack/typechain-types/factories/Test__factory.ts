/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Test, TestInterface } from "../Test";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferTo",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "BalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a764000060005534801561001c57600080fd5b50600054600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610410806100726000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632ccb1b301461003b578063d996788914610057575b600080fd5b61005560048036038101906100509190610252565b610087565b005b610071600480360381019061006c9190610292565b610170565b60405161007e91906102ce565b60405180910390f35b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100d69190610318565b9250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461012c919061034c565b925050819055507f845850991963cc258a0464dadcae66e59e72e9883beb28e5ea89a547df58eaff82826040516101649291906103b1565b60405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101e9826101be565b9050919050565b6101f9816101de565b811461020457600080fd5b50565b600081359050610216816101f0565b92915050565b6000819050919050565b61022f8161021c565b811461023a57600080fd5b50565b60008135905061024c81610226565b92915050565b60008060408385031215610269576102686101b9565b5b600061027785828601610207565b92505060206102888582860161023d565b9150509250929050565b6000602082840312156102a8576102a76101b9565b5b60006102b684828501610207565b91505092915050565b6102c88161021c565b82525050565b60006020820190506102e360008301846102bf565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103238261021c565b915061032e8361021c565b925082821015610341576103406102e9565b5b828203905092915050565b60006103578261021c565b91506103628361021c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610397576103966102e9565b5b828201905092915050565b6103ab816101de565b82525050565b60006040820190506103c660008301856103a2565b6103d360208301846102bf565b939250505056fea26469706673582212204a4ee56b6a2d163a39ee10ec4f6f6c17c152e7382274e84bdc2557dde4424fa864736f6c63430008090033";

type TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Test__factory extends ContractFactory {
  constructor(...args: TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Test> {
    return super.deploy(overrides || {}) as Promise<Test>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Test {
    return super.attach(address) as Test;
  }
  override connect(signer: Signer): Test__factory {
    return super.connect(signer) as Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInterface {
    return new utils.Interface(_abi) as TestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Test {
    return new Contract(address, _abi, signerOrProvider) as Test;
  }
}
