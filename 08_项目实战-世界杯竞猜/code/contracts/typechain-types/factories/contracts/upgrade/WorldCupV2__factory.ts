/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  WorldCupV2,
  WorldCupV2Interface,
} from "../../../contracts/upgrade/WorldCupV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_prev",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_newDeadline",
        type: "uint256",
      },
    ],
    name: "ChangeDeadline",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_country",
        type: "uint256",
      },
    ],
    name: "Finialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum WorldCupV2.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "Play",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "changeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newDeadline",
        type: "uint256",
      },
    ],
    name: "changeDeadline",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum WorldCupV2.Country",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "countryToPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currRound",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCupV2.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "finialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "enum WorldCupV2.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getCountryPlayters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "enum WorldCupV2.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_counts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedAmts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCupV2.Country",
        name: "_selected",
        type: "uint8",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "winnerVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506112ca806100206000396000f3fe6080604052600436106100e85760003560e01c80637aca97b51161008a578063ed12e8ef11610059578063ed12e8ef1461026e578063f35f644714610281578063f851a44014610297578063fe4b84df146102bd57600080fd5b80637aca97b5146101f9578063ada2ac3814610219578063b88a802f14610239578063c4864f571461024e57600080fd5b806334330586116100c6578063343305861461016457806334bf6d01146101915780633f5d8056146101b357806353a04b05146101e657600080fd5b80630fa68115146100ed57806328655c5b1461012a57806329dcb0cf1461014e575b600080fd5b3480156100f957600080fd5b5061010d610108366004610f1e565b6102dd565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561013657600080fd5b5061014060055481565b604051908152602001610121565b34801561015a57600080fd5b5061014060045481565b34801561017057600080fd5b5061014061017f366004610f71565b60036020526000908152604090205481565b34801561019d57600080fd5b506101b16101ac366004610f93565b610322565b005b3480156101bf57600080fd5b506000546101d490600160b01b900460ff1681565b60405160ff9091168152602001610121565b6101b16101f4366004610f93565b6107c7565b34801561020557600080fd5b506101b1610214366004610fae565b610987565b34801561022557600080fd5b50610140610234366004610fc7565b610a21565b34801561024557600080fd5b506101b1610a84565b34801561025a57600080fd5b5061014061026936600461100a565b610bed565b34801561027a57600080fd5b5047610140565b34801561028d57600080fd5b5061014060065481565b3480156102a357600080fd5b5060005461010d906201000090046001600160a01b031681565b3480156102c957600080fd5b506101b16102d8366004610fae565b610c3b565b6002602052826000526040600020602052816000526040600020818154811061030557600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6000546201000090046001600160a01b031633146103795760405162461bcd60e51b815260206004820152600f60248201526e6e6f7420617574686f72697a65642160881b60448201526064015b60405180910390fd5b60008054600160b01b900460ff168152600260205260408120818360048111156103a5576103a561103d565b60048111156103b6576103b661103d565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561041857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116103fa575b5050505050905060008060055461042c4790565b6104369190611069565b90506104936040518060400160405280601081526020016f31bab93920bb30b62130b630b731b29d60811b815250826040518060400160405280600e81526020016d3bb4b73732b9399031b7bab73a1d60911b8152508651610db9565b60005b83518110156106f45760008482815181106104b3576104b3611080565b6020908102919091018101516000805460ff600160b01b909104811682526001845260408083206001600160a01b038516845290945292902080549193509116156105205761051960405180606001604052806032815260200161126360329139610e08565b50506106e2565b805460ff1916600190811782556000908201818960048111156105455761054561103d565b60048111156105565761055661103d565b815260208082019290925260409081016000908120548154600160b01b900460ff1682526002909352908120919250908290828b600481111561059b5761059b61103d565b60048111156105ac576105ac61103d565b81526020810191909152604001600020546105c79088611096565b6105d191906110b8565b6001600160a01b0385166000908152600360205260408120805492935083929091906105fe9084906110d7565b9091555061060e905081886110d7565b9650806005600082825461062291906110d7565b92505081905550610677604051806040016040528060078152602001663bb4b73732b91d60c91b815250856040518060400160405280600b81526020016a31bab93921b7bab73a399d60a91b81525085610e4e565b604080518082018252601081526f3932bbb0b9321030b6ba1031bab9391d60811b6020808301919091528251808401845260068152653a37ba30b61d60d11b818301526001600160a01b03881660009081526003909252929020546106dd928491610db9565b505050505b806106ec816110ef565b915050610496565b5060006107018383611069565b9050801561073d57600080546201000090046001600160a01b0316815260036020526040812080548392906107379084906110d7565b90915550505b600080547ff29c2f4a0ac8b177f1c72bbdf7cd3899630a10ce3626cc73671d98f682d574c091600160b01b90910460ff1690601661077a8361110a565b91906101000a81548160ff021916908360ff1602179055508660048111156107a4576107a461103d565b6040805160ff909316835260208301919091520160405180910390a15050505050565b34633b9aca001461081a5760405162461bcd60e51b815260206004820152601760248201527f696e76616c69642066756e64732070726f7669646564210000000000000000006044820152606401610370565b600454421061085c5760405162461bcd60e51b815260206004820152600e60248201526d6974277320616c6c206f7665722160901b6044820152606401610370565b60008054600160b01b900460ff168152600260205260408120908260048111156108885761088861103d565b60048111156108995761089961103d565b8152602080820192909252604090810160009081208054600181810183559183528483200180546001600160a01b03191633908117909155825460ff600160b01b9091041683528185528383209083529093529081209190828201908460048111156109075761090761103d565b60048111156109185761091861103d565b8152602001908152602001600020600082825461093591906110d7565b90915550506000546040517fed75611777bda76f73e63b79a0b4b2f59dfb76a034ff90e9a4f204f414dadef79161097b91600160b01b90910460ff16903390869061112a565b60405180910390a15050565b4281116109cb5760405162461bcd60e51b8152602060048201526012602482015271696e76616c69642074696d657374616d702160701b6044820152606401610370565b60045460408051918252602082018390527f971a644aa91b5d500f684dc15814182ae5e2c3d047bb2ef0247c63bbcd8b378c910160405180910390a160068054906000610a17836110ef565b9091555050600455565b60ff831660009081526001602081815260408084206001600160a01b038716855290915282200181836004811115610a5b57610a5b61103d565b6004811115610a6c57610a6c61103d565b81526020019081526020016000205490509392505050565b3360009081526003602052604090205480610ad55760405162461bcd60e51b81526020600482015260116024820152706e6f7468696e6720746f20636c61696d2160781b6044820152606401610370565b33600090815260036020526040812081905560058054839290610af9908490611069565b9091555050604051600090339083908381818185875af1925050503d8060008114610b40576040519150601f19603f3d011682016040523d82523d6000602084013e610b45565b606091505b5050905080610b8d5760405162461bcd60e51b8152602060048201526014602482015273636c61696d20726577617264206661696c65642160601b6044820152606401610370565b610bb7604051806040016040528060088152602001673932bbb0b932399d60c11b81525083610e97565b60408051338152602081018490527fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e910161097b565b60ff8216600090815260026020526040812081836004811115610c1257610c1261103d565b6004811115610c2357610c2361103d565b81526020810191909152604001600020549392505050565b600054610100900460ff1615808015610c5b5750600054600160ff909116105b80610c755750303b158015610c75575060005460ff166001145b610cd85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610370565b6000805460ff191660011790558015610cfb576000805461ff0019166101001790555b6000805462010000600160b01b031916336201000002179055428211610d6e5760405162461bcd60e51b815260206004820152602260248201527f576f726c644375704c6f74746572793a20696e76616c696420646561646c696e604482015261652160f01b6064820152608401610370565b60048290558015610db5576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161097b565b5050565b610e0284848484604051602401610dd394939291906111bc565b60408051601f198184030181529190526020810180516001600160e01b031663c67ea9d160e01b179052610ed8565b50505050565b610e4b81604051602401610e1c91906111f9565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610ed8565b50565b610e0284848484604051602401610e68949392919061120c565b60408051601f198184030181529190526020810180516001600160e01b03166348e8889760e11b179052610ed8565b610db58282604051602401610ead929190611240565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790525b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b803560ff81168114610f0a57600080fd5b919050565b803560058110610f0a57600080fd5b600080600060608486031215610f3357600080fd5b610f3c84610ef9565b9250610f4a60208501610f0f565b9150604084013590509250925092565b80356001600160a01b0381168114610f0a57600080fd5b600060208284031215610f8357600080fd5b610f8c82610f5a565b9392505050565b600060208284031215610fa557600080fd5b610f8c82610f0f565b600060208284031215610fc057600080fd5b5035919050565b600080600060608486031215610fdc57600080fd5b610fe584610ef9565b9250610ff360208501610f5a565b915061100160408501610f0f565b90509250925092565b6000806040838503121561101d57600080fd5b61102683610ef9565b915061103460208401610f0f565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008282101561107b5761107b611053565b500390565b634e487b7160e01b600052603260045260246000fd5b6000826110b357634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156110d2576110d2611053565b500290565b600082198211156110ea576110ea611053565b500190565b600060001982141561110357611103611053565b5060010190565b600060ff821660ff81141561112157611121611053565b60010192915050565b60ff841681526001600160a01b0383166020820152606081016005831061116157634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b6000815180845260005b8181101561119557602081850181015186830182015201611179565b818111156111a7576000602083870101525b50601f01601f19169290920160200192915050565b6080815260006111cf608083018761116f565b85602084015282810360408401526111e7818661116f565b91505082606083015295945050505050565b602081526000610f8c602083018461116f565b60808152600061121f608083018761116f565b6001600160a01b038616602084015282810360408401526111e7818661116f565b604081526000611253604083018561116f565b9050826020830152939250505056fe746869732077696e6e657220686173206265656e2073657420616c72656164792c2077696c6c20626520736b697070656421a2646970667358221220c68db4c6d47232a1922c7abe74238faff6365715c356805590f142fd1643473964736f6c63430008090033";

type WorldCupV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldCupV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldCupV2__factory extends ContractFactory {
  constructor(...args: WorldCupV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WorldCupV2> {
    return super.deploy(overrides || {}) as Promise<WorldCupV2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): WorldCupV2 {
    return super.attach(address) as WorldCupV2;
  }
  override connect(signer: Signer): WorldCupV2__factory {
    return super.connect(signer) as WorldCupV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldCupV2Interface {
    return new utils.Interface(_abi) as WorldCupV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldCupV2 {
    return new Contract(address, _abi, signerOrProvider) as WorldCupV2;
  }
}
