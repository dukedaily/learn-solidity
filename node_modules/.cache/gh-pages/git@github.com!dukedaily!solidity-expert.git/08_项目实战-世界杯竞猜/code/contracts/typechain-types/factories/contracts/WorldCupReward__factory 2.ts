/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WorldCupReward,
  WorldCupRewardInterface,
} from "../../contracts/WorldCupReward";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "banana_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "useFor",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "nonce",
        type: "bytes",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldPendingOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "NewPendingOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "emergency",
        type: "bool",
      },
    ],
    name: "SetEmergency",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "SetSigner",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "banana",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "useFor",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expireAt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "nonce",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergency",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "emergency_",
        type: "bool",
      },
    ],
    name: "setEmergency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "setPendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "usedNonce",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "useFor",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expireAt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "nonce",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161119b38038061119b83398101604081905261002f9161006b565b60008054610100600160a81b0319163361010002179055600280546001600160a01b0319166001600160a01b039290921691909117905561009b565b60006020828403121561007d57600080fd5b81516001600160a01b038116811461009457600080fd5b9392505050565b6110f1806100aa6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063a7f28f6b1161008c578063caa6fea411610066578063caa6fea4146101de578063e30c3978146101f2578063e8bb51b714610205578063ebbc49651461021857600080fd5b8063a7f28f6b146101a5578063c3cafc6f146101b8578063c42069ec146101cb57600080fd5b80630501d556146100d45780630f600901146100e957806331cb61051461012c578063736c0d5b1461013f5780638da5cb5b1461016257806395ccea6714610192575b600080fd5b6100e76100e2366004610cf8565b610220565b005b6101176100f7366004610dbf565b805160208183018101805160048252928201919093012091525460ff1681565b60405190151581526020015b60405180910390f35b6100e761013a366004610e18565b6102b0565b61011761014d366004610e4f565b60036020526000908152604090205460ff1681565b60005461017a9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610123565b6100e76101a0366004610e6a565b610342565b6100e76101b3366004610e94565b6103d5565b60025461017a906001600160a01b031681565b6100e76101d9366004610e4f565b610530565b60025461011790600160a01b900460ff1681565b60015461017a906001600160a01b031681565b610117610213366004610e94565b610610565b6100e761079c565b60005461010090046001600160a01b031633146102585760405162461bcd60e51b815260040161024f90610f68565b60405180910390fd5b60028054821515600160a01b0260ff60a01b199091161790556040517fc749456be5379ac4cfc1f856208b32ddcf01b9db3ce6c37784ad91a8390ae9a8906102a590831515815260200190565b60405180910390a150565b60005461010090046001600160a01b031633146102df5760405162461bcd60e51b815260040161024f90610f68565b6001600160a01b038216600081815260036020908152604091829020805460ff19168515159081179091558251938452908301527f5fcbb78b58c04f459e28fba113b7b7248255a48fc71eca69650310daea630451910160405180910390a15050565b60005461010090046001600160a01b031633146103715760405162461bcd60e51b815260040161024f90610f68565b600254600160a01b900460ff166103ba5760405162461bcd60e51b815260206004820152600d60248201526c4e4f545f454d455247454e435960981b604482015260640161024f565b6002546103d1906001600160a01b031683836108a4565b5050565b60005460ff16156104285760405162461bcd60e51b815260206004820152601960248201527f5265656e7472616e743a207265656e7472616e742063616c6c00000000000000604482015260640161024f565b6000805460ff19166001179055600254600160a01b900460ff161561047b5760405162461bcd60e51b8152602060048201526009602482015268454d455247454e435960b81b604482015260640161024f565b61048a87878787878787610610565b5060016004848460405161049f929190610f98565b908152604051908190036020019020805491151560ff199092169190911790556002546104d6906001600160a01b031688876108a4565b866001600160a01b03167f7e693b5342b063ee80f64b1879f42239619b142e9a71e3d279f30c6ee140f169878786866040516105159493929190610fd1565b60405180910390a250506000805460ff191690555050505050565b60005461010090046001600160a01b0316331461055f5760405162461bcd60e51b815260040161024f90610f68565b6001546001600160a01b03828116911614156105b45760405162461bcd60e51b815260206004820152601460248201527313dddb98589b194e881053149150511657d4d15560621b604482015260640161024f565b6001546040516001600160a01b038084169216907fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008061069d836106978b8b8b8b8b8b306040516020016106379796959493929190610ffe565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b906109d5565b6001600160a01b03811660009081526003602052604090205490915060ff166106f55760405162461bcd60e51b815260206004820152600a6024820152692727aa2fa9a4a3a722a960b11b604482015260640161024f565b60048585604051610707929190610f98565b9081526040519081900360200190205460ff16156107545760405162461bcd60e51b815260206004820152600a6024820152691393d390d157d554d15160b21b604482015260640161024f565b42861161078d5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b604482015260640161024f565b50600198975050505050505050565b6001546001600160a01b031633146107f65760405162461bcd60e51b815260206004820152601e60248201527f4f776e61626c653a20524551554952455f50454e44494e475f4f574e45520000604482015260640161024f565b60008054600180546001600160a01b03818116610100818102610100600160a81b03198716178088556001600160a01b031990941690945560405194849004821695909493909204169184917f70aea8d848e8a90fb7661b227dc522eb6395c3dac71b63cb59edd5c9899b236491a36001546040516001600160a01b03918216918316907fb3d55174552271a4f1aaf36b72f50381e892171636b3fb5447fe00e995e7a37b90600090a35050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b1790529151600092839290871691610900919061104d565b6000604051808303816000865af19150503d806000811461093d576040519150601f19603f3d011682016040523d82523d6000602084013e610942565b606091505b509150915081801561096c57508051158061096c57508080602001905181019061096c9190611088565b6109ce5760405162461bcd60e51b815260206004820152602d60248201527f5472616e7366657248656c7065723a3a736166655472616e736665723a20747260448201526c185b9cd9995c8819985a5b1959609a1b606482015260840161024f565b5050505050565b60008060006109e485856109f9565b915091506109f181610a3f565b509392505050565b600080825160411415610a305760208301516040840151606085015160001a610a2487828585610bfd565b94509450505050610a38565b506000905060025b9250929050565b6000816004811115610a5357610a536110a5565b1415610a5c5750565b6001816004811115610a7057610a706110a5565b1415610abe5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161024f565b6002816004811115610ad257610ad26110a5565b1415610b205760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161024f565b6003816004811115610b3457610b346110a5565b1415610b8d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161024f565b6004816004811115610ba157610ba16110a5565b1415610bfa5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161024f565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c345750600090506003610ce1565b8460ff16601b14158015610c4c57508460ff16601c14155b15610c5d5750600090506004610ce1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cb1573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cda57600060019250925050610ce1565b9150600090505b94509492505050565b8015158114610bfa57600080fd5b600060208284031215610d0a57600080fd5b8135610d1581610cea565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d4357600080fd5b813567ffffffffffffffff80821115610d5e57610d5e610d1c565b604051601f8301601f19908116603f01168101908282118183101715610d8657610d86610d1c565b81604052838152866020858801011115610d9f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610dd157600080fd5b813567ffffffffffffffff811115610de857600080fd5b610df484828501610d32565b949350505050565b80356001600160a01b0381168114610e1357600080fd5b919050565b60008060408385031215610e2b57600080fd5b610e3483610dfc565b91506020830135610e4481610cea565b809150509250929050565b600060208284031215610e6157600080fd5b610d1582610dfc565b60008060408385031215610e7d57600080fd5b610e8683610dfc565b946020939093013593505050565b600080600080600080600060c0888a031215610eaf57600080fd5b610eb888610dfc565b9650602088013560ff81168114610ece57600080fd5b95506040880135945060608801359350608088013567ffffffffffffffff80821115610ef957600080fd5b818a0191508a601f830112610f0d57600080fd5b813581811115610f1c57600080fd5b8b6020828501011115610f2e57600080fd5b6020830195508094505060a08a0135915080821115610f4c57600080fd5b50610f598a828b01610d32565b91505092959891949750929550565b60208082526016908201527527bbb730b136329d102922a8aaa4a922afa7aba722a960511b604082015260600190565b8183823760009101908152919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60ff85168152836020820152606060408201526000610ff4606083018486610fa8565b9695505050505050565b600060018060a01b03808a16835260ff8916602084015287604084015286606084015260c0608084015261103660c084018688610fa8565b915080841660a08401525098975050505050505050565b6000825160005b8181101561106e5760208186018101518583015201611054565b8181111561107d576000828501525b509190910192915050565b60006020828403121561109a57600080fd5b8151610d1581610cea565b634e487b7160e01b600052602160045260246000fdfea26469706673582212202136148889816fb906b2aa8319c9f2e2d7160bfcf426034cf0019a324a02bbf564736f6c63430008090033";

type WorldCupRewardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldCupRewardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldCupReward__factory extends ContractFactory {
  constructor(...args: WorldCupRewardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    banana_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WorldCupReward> {
    return super.deploy(banana_, overrides || {}) as Promise<WorldCupReward>;
  }
  override getDeployTransaction(
    banana_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(banana_, overrides || {});
  }
  override attach(address: string): WorldCupReward {
    return super.attach(address) as WorldCupReward;
  }
  override connect(signer: Signer): WorldCupReward__factory {
    return super.connect(signer) as WorldCupReward__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldCupRewardInterface {
    return new utils.Interface(_abi) as WorldCupRewardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldCupReward {
    return new Contract(address, _abi, signerOrProvider) as WorldCupReward;
  }
}
