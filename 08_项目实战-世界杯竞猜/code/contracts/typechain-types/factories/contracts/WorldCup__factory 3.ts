/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { WorldCup, WorldCupInterface } from "../../contracts/WorldCup";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amt",
        type: "uint256",
      },
    ],
    name: "ClaimReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_country",
        type: "uint256",
      },
    ],
    name: "Finialize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "_currRound",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum WorldCup.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "Play",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "countries",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
      {
        internalType: "enum WorldCup.Country",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "countryToPlayers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currRound",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCup.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "finialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "enum WorldCup.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getCountryPlayters",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_round",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
      {
        internalType: "enum WorldCup.Country",
        name: "_country",
        type: "uint8",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "_counts",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVaultBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedAmts",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum WorldCup.Country",
        name: "_selected",
        type: "uint8",
      },
    ],
    name: "play",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "winnerVaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6007610140908152664745524d414e5960c81b6101605260a090815260066101808181526508ca4829c86960d31b6101a05260c05260056101c0818152644348494e4160d81b6101e05260e0526102009182526510949256905360d21b6102205261010091909152610280604052610240818152644b4f52454160d81b610260526101205262000092916001916200013d565b50348015620000a057600080fd5b50604051620014a3380380620014a3833981016040819052620000c391620002a6565b600080546001600160a01b03191633179055428111620001345760405162461bcd60e51b815260206004820152602260248201527f576f726c644375704c6f74746572793a20696e76616c696420646561646c696e604482015261652160f01b606482015260840160405180910390fd5b608052620002fd565b8280548282559060005260206000209081019282156200018f579160200282015b828111156200018f57825180516200017e918491602090910190620001a1565b50916020019190600101906200015e565b506200019d9291506200022c565b5090565b828054620001af90620002c0565b90600052602060002090601f016020900481019282620001d357600085556200021e565b82601f10620001ee57805160ff19168380011785556200021e565b828001600101855582156200021e579182015b828111156200021e57825182559160200191906001019062000201565b506200019d9291506200024d565b808211156200019d57600062000243828262000264565b506001016200022c565b5b808211156200019d57600081556001016200024e565b5080546200027290620002c0565b6000825580601f1062000283575050565b601f016020900490600052602060002090810190620002a391906200024d565b50565b600060208284031215620002b957600080fd5b5051919050565b600181811c90821680620002d557607f821691505b60208210811415620002f757634e487b7160e01b600052602260045260246000fd5b50919050565b608051611183620003206000396000818161016b015261088901526111836000f3fe6080604052600436106100c25760003560e01c80633f5d80561161007f578063b88a802f11610059578063b88a802f14610242578063c4864f5714610257578063ed12e8ef14610277578063f851a4401461028a57600080fd5b80633f5d8056146101dc57806353a04b051461020f578063ada2ac381461022257600080fd5b806308e9daa5146100c75780630fa68115146100fd57806328655c5b1461013557806329dcb0cf14610159578063343305861461018d57806334bf6d01146101ba575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610d77565b6102aa565b6040516100f49190610ddd565b60405180910390f35b34801561010957600080fd5b5061011d610118366004610e1c565b610356565b6040516001600160a01b0390911681526020016100f4565b34801561014157600080fd5b5061014b60055481565b6040519081526020016100f4565b34801561016557600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b34801561019957600080fd5b5061014b6101a8366004610e6f565b60046020526000908152604090205481565b3480156101c657600080fd5b506101da6101d5366004610e8a565b61039b565b005b3480156101e857600080fd5b506000546101fd90600160a01b900460ff1681565b60405160ff90911681526020016100f4565b6101da61021d366004610e8a565b610834565b34801561022e57600080fd5b5061014b61023d366004610ea5565b610a13565b34801561024e57600080fd5b506101da610a78565b34801561026357600080fd5b5061014b610272366004610ee8565b610be1565b34801561028357600080fd5b504761014b565b34801561029657600080fd5b5060005461011d906001600160a01b031681565b600181815481106102ba57600080fd5b9060005260206000200160009150905080546102d590610f1b565b80601f016020809104026020016040519081016040528092919081815260200182805461030190610f1b565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b505050505081565b6003602052826000526040600020602052816000526040600020818154811061037e57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6000546001600160a01b031633146103ec5760405162461bcd60e51b815260206004820152600f60248201526e6e6f7420617574686f72697a65642160881b60448201526064015b60405180910390fd5b60008054600160a01b900460ff1681526003602052604081208183600481111561041857610418610f56565b600481111561042957610429610f56565b815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561048b57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161046d575b5050505050905060008060055461049f4790565b6104a99190610f82565b90506105066040518060400160405280601081526020016f31bab93920bb30b62130b630b731b29d60811b815250826040518060400160405280600e81526020016d3bb4b73732b9399031b7bab73a1d60911b8152508651610c2f565b60005b835181101561076757600084828151811061052657610526610f99565b6020908102919091018101516000805460ff600160a01b909104811682526002845260408083206001600160a01b038516845290945292902080549193509116156105935761058c60405180606001604052806032815260200161111c60329139610c7e565b5050610755565b805460ff1916600190811782556000908201818960048111156105b8576105b8610f56565b60048111156105c9576105c9610f56565b815260208082019290925260409081016000908120548154600160a01b900460ff1682526003909352908120919250908290828b600481111561060e5761060e610f56565b600481111561061f5761061f610f56565b815260208101919091526040016000205461063a9088610faf565b6106449190610fd1565b6001600160a01b038516600090815260046020526040812080549293508392909190610671908490610ff0565b9091555061068190508188610ff0565b965080600560008282546106959190610ff0565b925050819055506106ea604051806040016040528060078152602001663bb4b73732b91d60c91b815250856040518060400160405280600b81526020016a31bab93921b7bab73a399d60a91b81525085610cc4565b604080518082018252601081526f3932bbb0b9321030b6ba1031bab9391d60811b6020808301919091528251808401845260068152653a37ba30b61d60d11b818301526001600160a01b0388166000908152600490925292902054610750928491610c2f565b505050505b8061075f81611008565b915050610509565b5060006107748383610f82565b905080156107aa57600080546001600160a01b0316815260046020526040812080548392906107a4908490610ff0565b90915550505b600080547ff29c2f4a0ac8b177f1c72bbdf7cd3899630a10ce3626cc73671d98f682d574c091600160a01b90910460ff169060146107e783611023565b91906101000a81548160ff021916908360ff16021790555086600481111561081157610811610f56565b6040805160ff909316835260208301919091520160405180910390a15050505050565b34633b9aca00146108875760405162461bcd60e51b815260206004820152601760248201527f696e76616c69642066756e64732070726f76696465642100000000000000000060448201526064016103e3565b7f000000000000000000000000000000000000000000000000000000000000000042106108e75760405162461bcd60e51b815260206004820152600e60248201526d6974277320616c6c206f7665722160901b60448201526064016103e3565b60008054600160a01b900460ff1681526003602052604081209082600481111561091357610913610f56565b600481111561092457610924610f56565b8152602080820192909252604090810160009081208054600181810183559183528483200180546001600160a01b03191633908117909155825460ff600160a01b9091041683526002855283832090835290935290812091908282019084600481111561099357610993610f56565b60048111156109a4576109a4610f56565b815260200190815260200160002060008282546109c19190610ff0565b90915550506000546040517fed75611777bda76f73e63b79a0b4b2f59dfb76a034ff90e9a4f204f414dadef791610a0791600160a01b90910460ff169033908690611043565b60405180910390a15050565b60ff831660009081526002602090815260408083206001600160a01b0386168452909152812060010181836004811115610a4f57610a4f610f56565b6004811115610a6057610a60610f56565b81526020019081526020016000205490509392505050565b3360009081526004602052604090205480610ac95760405162461bcd60e51b81526020600482015260116024820152706e6f7468696e6720746f20636c61696d2160781b60448201526064016103e3565b33600090815260046020526040812081905560058054839290610aed908490610f82565b9091555050604051600090339083908381818185875af1925050503d8060008114610b34576040519150601f19603f3d011682016040523d82523d6000602084013e610b39565b606091505b5050905080610b815760405162461bcd60e51b8152602060048201526014602482015273636c61696d20726577617264206661696c65642160601b60448201526064016103e3565b610bab604051806040016040528060088152602001673932bbb0b932399d60c11b81525083610d0d565b60408051338152602081018490527fba8de60c3403ec381d1d484652ea1980e3c3e56359195c92525bff4ce47ad98e9101610a07565b60ff8216600090815260036020526040812081836004811115610c0657610c06610f56565b6004811115610c1757610c17610f56565b81526020810191909152604001600020549392505050565b610c7884848484604051602401610c499493929190611088565b60408051601f198184030181529190526020810180516001600160e01b031663c67ea9d160e01b179052610d56565b50505050565b610cc181604051602401610c929190610ddd565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610d56565b50565b610c7884848484604051602401610cde94939291906110c5565b60408051601f198184030181529190526020810180516001600160e01b03166348e8889760e11b179052610d56565b610d528282604051602401610d239291906110f9565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610d56565b5050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b600060208284031215610d8957600080fd5b5035919050565b6000815180845260005b81811015610db657602081850181015186830182015201610d9a565b81811115610dc8576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610df06020830184610d90565b9392505050565b803560ff81168114610e0857600080fd5b919050565b803560058110610e0857600080fd5b600080600060608486031215610e3157600080fd5b610e3a84610df7565b9250610e4860208501610e0d565b9150604084013590509250925092565b80356001600160a01b0381168114610e0857600080fd5b600060208284031215610e8157600080fd5b610df082610e58565b600060208284031215610e9c57600080fd5b610df082610e0d565b600080600060608486031215610eba57600080fd5b610ec384610df7565b9250610ed160208501610e58565b9150610edf60408501610e0d565b90509250925092565b60008060408385031215610efb57600080fd5b610f0483610df7565b9150610f1260208401610e0d565b90509250929050565b600181811c90821680610f2f57607f821691505b60208210811415610f5057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610f9457610f94610f6c565b500390565b634e487b7160e01b600052603260045260246000fd5b600082610fcc57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610feb57610feb610f6c565b500290565b6000821982111561100357611003610f6c565b500190565b600060001982141561101c5761101c610f6c565b5060010190565b600060ff821660ff81141561103a5761103a610f6c565b60010192915050565b60ff841681526001600160a01b0383166020820152606081016005831061107a57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b60808152600061109b6080830187610d90565b85602084015282810360408401526110b38186610d90565b91505082606083015295945050505050565b6080815260006110d86080830187610d90565b6001600160a01b038616602084015282810360408401526110b38186610d90565b60408152600061110c6040830185610d90565b9050826020830152939250505056fe746869732077696e6e657220686173206265656e2073657420616c72656164792c2077696c6c20626520736b697070656421a264697066735822122056fb79b62659d2ad2d2a2089fdab5c11df6f22693d96d14fcb3b2daaab7bf12b64736f6c63430008090033";

type WorldCupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WorldCupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WorldCup__factory extends ContractFactory {
  constructor(...args: WorldCupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WorldCup> {
    return super.deploy(_deadline, overrides || {}) as Promise<WorldCup>;
  }
  override getDeployTransaction(
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_deadline, overrides || {});
  }
  override attach(address: string): WorldCup {
    return super.attach(address) as WorldCup;
  }
  override connect(signer: Signer): WorldCup__factory {
    return super.connect(signer) as WorldCup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WorldCupInterface {
    return new utils.Interface(_abi) as WorldCupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WorldCup {
    return new Contract(address, _abi, signerOrProvider) as WorldCup;
  }
}
